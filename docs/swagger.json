{
    "swagger": "2.0",
    "info": {
        "description": "Just for fun API description",
        "title": "Just for fun API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/user/": {
            "post": {
                "description": "Set or Update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Set or Update user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structures.UserSetRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created",
                        "schema": {
                            "$ref": "#/definitions/response.UserResponse"
                        }
                    },
                    "202": {
                        "description": "User updated",
                        "schema": {
                            "$ref": "#/definitions/response.UserResponse"
                        }
                    },
                    "400": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.ErrorResponse": {
            "description": "Error Response",
            "type": "object",
            "required": [
                "error",
                "status"
            ],
            "properties": {
                "error": {
                    "description": "Error message",
                    "type": "string",
                    "example": "Error message"
                },
                "status": {
                    "description": "Always ERROR",
                    "type": "string",
                    "example": "ERROR"
                }
            }
        },
        "response.UserResponse": {
            "description": "User Response",
            "type": "object",
            "required": [
                "data",
                "status"
            ],
            "properties": {
                "data": {
                    "description": "User info, if status is OK else nil",
                    "allOf": [
                        {
                            "$ref": "#/definitions/structures.UserShow"
                        }
                    ]
                },
                "status": {
                    "description": "OK or ERROR",
                    "type": "string",
                    "example": "OK"
                }
            }
        },
        "structures.UserSetRequest": {
            "description": "User setter",
            "type": "object",
            "required": [
                "tg_id"
            ],
            "properties": {
                "first_name": {
                    "description": "This is FirstName in Telegram, may be nil",
                    "type": "string",
                    "format": "string",
                    "example": "firstname"
                },
                "last_name": {
                    "description": "This is LastName in Telegram, may be nil",
                    "type": "string",
                    "format": "string",
                    "example": "lastname"
                },
                "tg_id": {
                    "description": "This is TgID in Telegram",
                    "type": "integer",
                    "format": "int64",
                    "example": 54321
                },
                "user_name": {
                    "description": "This is UserName in Telegram, may be nil",
                    "type": "string",
                    "format": "string",
                    "example": "username"
                }
            }
        },
        "structures.UserShow": {
            "description": "Show User Info",
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "tg_id",
                "user_name"
            ],
            "properties": {
                "first_name": {
                    "description": "This is FirstName in Telegram, may be nil",
                    "type": "string",
                    "format": "string",
                    "example": "firstname"
                },
                "last_name": {
                    "description": "This is LastName in Telegram, may be nil",
                    "type": "string",
                    "format": "string",
                    "example": "lastname"
                },
                "tg_id": {
                    "description": "This is TgID in Telegram",
                    "type": "integer",
                    "format": "int64",
                    "example": 54321
                },
                "user_name": {
                    "description": "This is UserName in Telegram, may be nil",
                    "type": "string",
                    "format": "string",
                    "example": "username"
                }
            }
        }
    }
}